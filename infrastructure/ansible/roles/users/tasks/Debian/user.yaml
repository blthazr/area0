---
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#   @file           :   tasks/Debian/user.yaml
#   @description    :   ansible-role-users | Debian | user tasks
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- name: "{{ ansible_os_family }} | user | generate a list of user group(s)"
  ansible.builtin.set_fact:
    user_groups_list: "{% for item in user_groups %}{{ item.name }}{{ '' if loop.last else ',' }}{% endfor %}"
  when:
    - "user_groups is defined"

- name: "{{ ansible_os_family }} | user | create user(s)"
  ansible.builtin.user:
    append: "{{ user_create.append | default(omit) }}"
    comment: "{{ user_create.comment | default(omit) }}"
    create_home: "{{ user_create.create_home | default(omit) }}"
    group: "{{ user_create.group | default(user_create.username if group_per_user else (default_group if default_group is defined else omit)) }}"
    groups: '{{ user_create.groups | join(",") if user_create.groups is defined else (user_groups_list if user_groups_list is defined else '''') }}' # empty string removes user from all secondary groups
    home: '{{ user_create.home | default(default_users_home ~ "/" ~ user_create.username) }}'
    name: "{{ user_create.username }}"
    password: "{{ user_create.password | default(omit) }}"
    shell: "{{ user_create.shell if user_create.shell is defined else (default_users_shell if default_users_shell is defined else omit) }}"
    state: present
    system: "{{ user_create.system | default(omit) }}"
    uid: "{{ user_create.uid | default(omit) }}"
    update_password: "{{ user_create.update_password | default(omit) }}"
  loop: "{{ users }}"
  loop_control:
    loop_var: user_create
  when:
    - "users is defined"
    - 'user_create.username != "root"'
