---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app "${APP}"
spec:
  chart:
    spec:
      chart: kube-prometheus-stack
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
      version: 69.8.2
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
  install:
    crds: Skip
    remediation:
      retries: 3
  interval: 30m
  upgrade:
    cleanupOnFail: true
    crds: Skip
    remediation:
      retries: 3
      strategy: rollback
  values:
    alertmanager:
      alertmanagerSpec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: node-role.kubernetes.io/control-plane
                      operator: DoesNotExist
        alertmanagerConfiguration:
          global:
            resolveTimeout: 5m
          name: alertmanager
        externalUrl: "https://${ALERTMANAGER_HOSTNAME:=alertmanager}.${SECRET_DOMAIN}"
        replicas: 1
        storage:
          volumeClaimTemplate:
            spec:
              resources:
                requests:
                  storage: 1Gi
              storageClassName: ceph-block
      ingress:
        enabled: true
        hosts:
          - "${ALERTMANAGER_HOSTNAME:=alertmanager}.${SECRET_DOMAIN}"
        ingressClassName: internal
        pathType: Prefix
    cleanPrometheusOperatorObjectNames: true
    crds:
      enabled: false
    grafana:
      enabled: false
      forceDeployDashboards: true
      sidecar:
        dashboards:
          annotations:
            grafana_folder: Kubernetes
    kube-state-metrics:
      fullnameOverride: kube-state-metrics
      metricLabelsAllowlist:
        - pods=[*]
        - deployments=[*]
        - persistentvolumeclaims=[*]
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels: ["__meta_kubernetes_pod_node_name"]
              targetLabel: kubernetes_node
    kubeApiServer:
      enabled: true
      serviceMonitor:
        selector:
          k8s-app: kube-apiserver
    kubeControllerManager: &kubeControllerManager
      enabled: true
      service:
        selector:
          k8s-app: kube-controller-manager
    kubeEtcd:
      <<: *kubeControllerManager # etcd runs on control plane nodes
    kubeProxy:
      enabled: false
    kubeScheduler:
      enabled: true
      service:
        selector:
          k8s-app: kube-scheduler
    kubeStateMetrics:
      enabled: true
    kubelet:
      enabled: true
    nodeExporter:
      enabled: true
    prometheus:
      ingress:
        enabled: true
        hosts:
          - "${HOSTNAME:=${APP}}.${SECRET_DOMAIN}"
        ingressClassName: internal
        pathType: Prefix
      prometheusSpec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: node-role.kubernetes.io/control-plane
                      operator: DoesNotExist
        enableAdminAPI: true
        enableFeatures:
          - memory-snapshot-on-shutdown
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        replicaExternalLabelName: __replica__
        replicas: 1
        resources:
          limits:
            memory: 1500Mi
          requests:
            cpu: 100m
        retention: 14d
        retentionSize: 50GB
        ruleSelectorNilUsesHelmValues: false
        scrapeConfigSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        storageSpec:
          volumeClaimTemplate:
            spec:
              resources:
                requests:
                  storage: 50Gi
              storageClassName: ceph-block
        walCompression: true
    prometheus-node-exporter:
      fullnameOverride: node-exporter
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels: ["__meta_kubernetes_pod_node_name"]
              targetLabel: kubernetes_node
    prometheusOperator:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: DoesNotExist
