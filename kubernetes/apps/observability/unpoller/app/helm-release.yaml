---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app unpoller
spec:
  chart:
    spec:
      chart: app-template
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      version: 3.5.1
  dependsOn:
    - name: kube-prometheus-stack
      namespace: observability
  install:
    remediation:
      retries: 3
  interval: 30m
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
      strategy: rollback
  values:
    controllers:
      unpoller:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            env:
              TZ: "${CLUSTER_TIME_ZONE}"
              UP_INFLUXDB_DISABLE: true
              UP_PROMETHEUS_HTTP_LISTEN: 0.0.0.0:80
              UP_UNIFI_DEFAULT_SAVE_DPI: true
            envFrom: &envFrom
              - secretRef:
                  name: "${APP}-secret"
            image:
              repository: ghcr.io/unpoller/unpoller
              tag: v2.12.0@sha256:3af948dc9a6b51f1cc4ad86f0a3ba5548233baec0f40658a4761af5d4eede830
            nameOverride: *app
            probes:
              liveness: &probes
                enabled: true
              readiness: *probes
            resources:
              limits:
                memory: 128M
              requests:
                cpu: 10m
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop: ["ALL"]
              readOnlyRootFilesystem: true
    defaultPodOptions:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: DoesNotExist
      securityContext:
        runAsGroup: ${APP_GID}
        runAsNonRoot: true
        runAsUser: ${APP_UID}
        seccompProfile:
          type: RuntimeDefault
    service:
      app:
        controller: *app
        ports:
          http:
            port: 80
    serviceMonitor:
      app:
        enabled: true
        endpoints:
          - interval: 2m # Unifi API only polls at 2m intervals
            path: /metrics
            port: http
            scheme: http
            scrapeTimeout: 10s
        serviceName: *app
