---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: "${APP}"
spec:
  chart:
    spec:
      chart: app-template
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      version: 3.7.2
  dependsOn:
    - name: kube-prometheus-stack
      namespace: observability
  install:
    remediation:
      retries: 3
  interval: 30m
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
      strategy: rollback
  values:
    configMaps:
      config:
        enabled: true
        data:
          config.yml: |
            server:
              enable:
                debug:
                  server: true
              listen:
                address: 'http://0.0.0.0:8000'
            service:
              alertmanager:
                address: http://alertmanager-operated.observability.svc.cluster.local:9093
              kubernetes:
                address: ''
                inCluster: true
                tls:
                  caFile: ''
                  crtFile: ''
                  keyFile: ''
    controllers:
      silence-operator:
        containers:
          silence-operator:
            args:
              - daemon
              - --config.dirs=/var/run/silence-operator/configmap/
              - --config.files=config
            image:
              repository: quay.io/giantswarm/silence-operator
              tag: 0.12.0
            probes:
              liveness:
                custom: true
                enabled: true
                spec:
                  failureThreshold: 3
                  httpGet:
                    path: /healthz
                    port: &port 8000
                  initialDelaySeconds: 15
                  periodSeconds: 20
                  timeoutSeconds: 1
              readiness:
                enabled: false
              startup:
                enabled: false
            resources:
              limits:
                memory: 256Mi
              requests:
                cpu: 10m
                memory: 128Mi
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop: ["ALL"]
        pod:
          securityContext:
            runAsGroup: ${APP_GID:=1000}
            runAsNonRoot: true
            runAsUser: ${APP_UID:=1000}
    defaultPodOptions:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: DoesNotExist
    persistence:
      config:
        enabled: true
        globalMounts:
          - path: /var/run/silence-operator/configmap
        identifier: config
        type: configMap
    serviceAccount:
      create: true
      name: "${APP}"
