---
apiVersion: grafana.integreatly.org/v1beta1
kind: Grafana
metadata:
  name: grafana
  labels:
    dashboards: "grafana"
spec:
  config:
    analytics:
      check_for_updates: "false"
      check_for_plugin_updates: "false"
    auth:
      disable_login_form: "false"
      oauth_auto_login: "true"
    auth.generic_oauth:
      enabled: "true"
      name: Auth0
      client_id: "${SECRET_AUTH0_GRAFANA_CLIENT_ID}"
      client_secret: "${SECRET_AUTH0_GRAFANA_CLIENT_SECRET}"
      scopes: "openid profile email"
      auth_url: "https://${SECRET_AUTH0_TENANT}.us.auth0.com/authorize"
      token_url: "https://${SECRET_AUTH0_TENANT}.us.auth0.com/oauth/token"
      api_url: "https://${SECRET_AUTH0_TENANT}.us.auth0.com/userinfo"
      role_attribute_path: |
        contains("https://${SECRET_DOMAIN}/groups"[*], 'Grafana Admins') && 'Admin' || contains("https://${SECRET_DOMAIN}/groups"[*], 'Grafana Editors') && 'Editor' || 'Viewer'
      use_pkce: "true"
    grafana_net:
      url: https://grafana.net
    log:
      mode: console
    panels:
      disable_sanitize_html: "true"
    paths:
      data: /var/lib/grafana/data
      logs: /var/log/grafana
      plugins: /var/lib/grafana/plugins
      provisioning: /etc/grafana/provisioning
    server:
      root_url: "https://grafana.${SECRET_DOMAIN}"
  deployment:
    spec:
      replicas: 1
      strategy:
        rollingUpdate:
          maxSurge: 1
          maxUnavailable: 1
        type: RollingUpdate
      template:
        metadata:
          annotations:
            configmap.reloader.stakater.com/reload: "grafana"
        spec:
          topologySpreadConstraints:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: grafana
              maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: DoNotSchedule
  ingress:
    metadata:
      annotations:
        hajimari.io/appName: "Grafana"
        hajimari.io/icon: simple-icons:grafana
    spec:
      ingressClassName: nginx
      rules:
        - host: &host grafana.theburnh.am
          http:
            paths:
              - backend:
                  service:
                    name: grafana-service
                    port:
                      number: 3000
                path: /
                pathType: Prefix
      tls:
        - hosts:
            - *host
