---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app grafana
spec:
  chart:
    spec:
      chart: *app
      version: 6.57.2
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 3
  interval: 30m
  maxHistory: 2
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: default
            disableDeletion: false
            editable: true
            folder: ""
            options:
              path: /var/lib/grafana/dashboards/default
            orgId: 1
            type: file
    datasources:
      datasources.yaml:
        apiVersion: 1
        datasources:
          - access: proxy
            isDefault: true
            name: Prometheus
            type: prometheus
            url: http://thanos-query-frontend.observability.svc.cluster.local:9090
        deleteDatasources:
          - name: Loki
            orgId: 1
          - name: Alertmanager
            orgId: 1
    deploymentStrategy:
      type: Recreate
    env:
      GF_AUTH_GENERIC_OAUTH_API_URL: "https://${SECRET_AUTH0_TENANT}.us.auth0.com/userinfo"
      GF_AUTH_GENERIC_OAUTH_AUTH_URL: "https://${SECRET_AUTH0_TENANT}.us.auth0.com/authorize"
      GF_AUTH_GENERIC_OAUTH_CLIENT_ID: "${SECRET_AUTH0_GRAFANA_CLIENT_ID}"
      GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET: "${SECRET_AUTH0_GRAFANA_CLIENT_SECRET}"
      GF_AUTH_GENERIC_OAUTH_TOKEN_URL: "https://${SECRET_AUTH0_TENANT}.us.auth0.com/oauth/token"
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
      GF_EXPLORE_ENABLED: true
      GF_SECURITY_COOKIE_SAMESITE: grafana
      GF_SERVER_ROOT_URL: "https://grafana.${SECRET_DOMAIN}"
    grafana.ini:
      analytics:
        check_for_updates: false
        check_for_plugin_updates: false
      auth:
        oauth_auto_login: true
      auth.basic:
        enabled: false
      auth.generic_oauth:
        enabled: true
        name: Auth0
        scopes: "openid profile email"
        use_pkce: true
      auth.generic_oauth.group_mapping:
        role_attribute_path: |
          contains("https://${SECRET_DOMAIN}/groups"[*], 'Grafana Admins') && 'Admin' || contains("https://${SECRET_DOMAIN}/groups"[*], 'Grafana Editors') && 'Editor' || 'Viewer'
        org_id: 1
      grafana_net:
        url: https://grafana.net
      log:
        mode: console
      paths:
        data: /var/lib/grafana/data
        logs: /var/log/grafana
        plugins: /var/lib/grafana/plugins
        provisioning: /etc/grafana/provisioning
    ingress:
      annotations:
        hajimari.io/icon: simple-icons:grafana
      enabled: true
      hosts:
        - &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
      ingressClassName: nginx
      tls:
        - hosts:
            - *host
    persistence:
      enabled: false
    plugins:
      - grafana-clock-panel
      - grafana-piechart-panel
      - grafana-worldmap-panel
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - vonage-status-panel
    podAnnotations:
      configmap.reloader.stakater.com/reload: "grafana"
    rbac:
      pspEnabled: false
    replicas: 1
    serviceMonitor:
      enabled: true
    sidecar:
      dashboards:
        enabled: true
        folderAnnotation: grafana_folder
        provider:
          foldersFromFilesStructure: true
        searchNamespace: ALL
      datasources:
        enabled: true
        searchNamespace: ALL
    testFramework:
      enabled: false
    topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: grafana
