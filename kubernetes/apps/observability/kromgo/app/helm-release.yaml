---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app kromgo
spec:
  chart:
    spec:
      chart: app-template
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      version: 3.4.0
  install:
    remediation:
      retries: 3
  interval: 30m
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
      strategy: rollback
  values:
    controllers:
      kromgo:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          kromgo:
            env:
              HEALTH_HOST: 0.0.0.0
              HEALTH_PORT: &healthPort 8888
              PROMETHEUS_URL: http://prometheus-operated.observability.svc.cluster.local:9090
              SERVER_HOST: 0.0.0.0
              SERVER_PORT: &serverPort 80
            image:
              repository: ghcr.io/kashalls/kromgo
              tag: v0.4.1
            probes:
              liveness: &probes
                custom: true
                enabled: true
                spec:
                  failureThreshold: 3
                  httpGet:
                    path: /readyz
                    port: *healthPort
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
              readiness: *probes
            resources:
              limits:
                memory: 64Mi
              requests:
                cpu: 10m
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop: ["ALL"]
              readOnlyRootFilesystem: true
    defaultPodOptions:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: DoesNotExist
      securityContext:
        runAsGroup: ${APP_GID}
        runAsNonRoot: true
        runAsUser: ${APP_UID}
        seccompProfile:
          type: RuntimeDefault
    ingress:
      app:
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          hajimari.io/enable: "false"
        className: external
        enabled: true
        hosts:
          - host: &host "metrics.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
    persistence:
      config-file:
        enabled: true
        globalMounts:
          - path: /kromgo/config.yaml
            readOnly: true
            subPath: config.yaml
        name: kromgo-configmap
        type: configMap
    service:
      app:
        controller: *app
        ports:
          health:
            port: *healthPort
          http:
            port: *serverPort
            primary: true
