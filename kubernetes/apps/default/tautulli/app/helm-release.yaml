---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: tautulli
spec:
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  interval: 1h
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      tautulli:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            env:
              TAUTULLI_HTTP_PORT: &port 80
              TAUTULLI_HTTP_BASE_URL: "https://${HOSTNAME:=${APP}}.${SECRET_DOMAIN}"
              TZ: "${CLUSTER_TIME_ZONE}"
            envFrom:
              - secretRef:
                  name: "${APP}-secret"
            image:
              repository: ghcr.io/home-operations/tautulli
              tag: 2.16.0@sha256:2a092f86a51f5718111097b0fced33eaa876b5904a543b7504f92357a4f75635
            probes:
              liveness: &probes
                custom: true
                enabled: true
                spec:
                  failureThreshold: 3
                  httpGet:
                    path: /status
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
              readiness: *probes
            resources:
              limits:
                memory: 512Mi
              requests:
                cpu: 10m
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop: ["ALL"]
              readOnlyRootFilesystem: true
        replicas: ${REPLICAS:=1}
    defaultPodOptions:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: DoesNotExist
      securityContext:
        fsGroup: ${APP_GID:=1000}
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: ${APP_GID:=1000}
        runAsNonRoot: true
        runAsUser: ${APP_UID:=1000}
    persistence:
      config:
        enabled: true
        existingClaim: "${VOLSYNC_PVC:=${APP}}"
        globalMounts:
          - path: /config
      config-cache:
        enabled: true
        existingClaim: "${APP_PVC}"
        globalMounts:
          - path: /config/cache
      tmpfs:
        advancedMounts:
          tautulli:
            app:
              - path: /config/logs
                subPath: logs
              - path: /tmp
                subPath: tmp
        enabled: true
        type: emptyDir
    route:
      app:
        hostnames: ["${HOSTNAME:=${APP}}.${SECRET_DOMAIN}"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
    service:
      app:
        controller: "${APP}"
        ports:
          http:
            port: *port
