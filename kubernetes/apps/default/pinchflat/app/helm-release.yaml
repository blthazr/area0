---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: pinchflat
spec:
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  interval: 1h
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      pinchflat:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            env:
              PORT: &port 80
              TZ: "${CLUSTER_TIME_ZONE}"
              TZ_DATA_DIR: /tmp/elixir_tz_data
            image:
              repository: ghcr.io/kieraneglin/pinchflat
              tag: v2025.3.17@sha256:1c5f79531c00529f525d16d926179ef260b9c0e27119f8c95867a62aba9267f8
            probes:
              liveness: &probes
                custom: true
                enabled: true
                spec:
                  failureThreshold: 3
                  httpGet:
                    path: /healthcheck
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
              readiness: *probes
            resources:
              limits:
                gpu.intel.com/i915: 1
                memory: 4Gi
              requests:
                cpu: 10m
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop: ["ALL"]
              readOnlyRootFilesystem: true
        replicas: ${REPLICAS:=1}
    defaultPodOptions:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: DoesNotExist
      nodeSelector:
        # TODO: Remove role/media nodeSelector once new cluster is built
        role/media: "true"
        intel.feature.node.kubernetes.io/gpu: "true"
      securityContext:
        fsGroup: ${APP_GID:=1000}
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: ${APP_GID:=1000}
        runAsNonRoot: true
        runAsUser: ${APP_UID:=1000}
        supplementalGroups:
          - 44
    ingress:
      app:
        className: internal
        enabled: true
        hosts:
          - host: "${HOSTNAME:=${APP}}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        enabled: true
        existingClaim: "${VOLSYNC_PVC:=${APP}}"
        globalMounts:
          - path: /config
      downloads:
        advancedMounts:
          pinchflat:
            app:
              - path: /downloads
                subPath: media/download/yt-dlp/pinchflat
        enabled: true
        path: "${NAS_NFS_PATH}"
        server: "${NAS_ADDRESS}"
        type: nfs
      tmpfs:
        advancedMounts:
          pinchflat:
            app:
              - path: /etc/yt-dlp
                subPath: yt-dlp
              - path: /tmp
                subPath: tmp
        enabled: true
        type: emptyDir
    service:
      app:
        controller: "${APP}"
        ports:
          http:
            port: *port
