---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app lidarr
spec:
  chart:
    spec:
      chart: app-template
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      version: 3.2.1
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
  install:
    remediation:
      retries: 3
  interval: 30m
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
      strategy: rollback
  values:
    controllers:
      lidarr:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            env:
              LIDARR__AUTHENTICATION_METHOD: External
              LIDARR__AUTHENTICATION_REQUIRED: DisabledForLocalAddresses
              LIDARR__BRANCH: develop
              LIDARR__INSTANCE_NAME: "${APP}"
              LIDARR__LOG__ANALYTICSENABLED: "False"
              LIDARR__LOG_LEVEL: info
              LIDARR__PORT: &port 80
              LIDARR__THEME: dark
              TZ: "${CLUSTER_TIME_ZONE}"
            envFrom: &envFrom
              - secretRef:
                  name: "${APP}-secret"
            image:
              repository: ghcr.io/onedr0p/lidarr-develop
              tag: 2.4.0.4222@sha256:802800aac36a950c151529a9fe5e7cc09ae4068c80506d614c59783ada2c1058
            probes:
              liveness: &probes
                custom: true
                enabled: true
                spec:
                  failureThreshold: 3
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
              readiness: *probes
              startup:
                enabled: false
            resources:
              limits:
                memory: 1Gi
              requests:
                cpu: 10m
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop: ["ALL"]
              readOnlyRootFilesystem: true
        initContainers:
          init-db:
            envFrom: *envFrom
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
    defaultPodOptions:
      nodeSelector:
        role/media: "true"
      securityContext:
        fsGroup: ${APP_GID}
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: ${APP_GID}
        runAsNonRoot: true
        runAsUser: ${APP_UID}
        seccompProfile:
          type: RuntimeDefault
        supplementalGroups:
          - 100
    ingress:
      app:
        annotations:
          hajimari.io/group: Media Management
          hajimari.io/icon: mdi:headphones
          hajimari.io/info: Music Collection Manager
        className: internal
        enabled: true
        hosts:
          - host: &host "${HOSTNAME:-${APP}}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        existingClaim: "${APP_PVC:-${APP}}"
        globalMounts:
          - path: /config
      log:
        enabled: true
        globalMounts:
          - path: /config/logs
        type: emptyDir
      media:
        enabled: true
        existingClaim: local-media
        globalMounts:
          - path: /media
      tmp:
        enabled: true
        globalMounts:
          - path: /tmp
        type: emptyDir
    service:
      app:
        controller: lidarr
        ports:
          http:
            port: *port
