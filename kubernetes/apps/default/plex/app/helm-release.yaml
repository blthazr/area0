---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: plex
spec:
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  interval: 1h
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      plex:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            env:
              PLEX_ADVERTISE_URL: "https://${HOSTNAME:=${APP}}.${SECRET_DOMAIN}:443,http://${SVC_PLEX}:32400"
              PLEX_NO_AUTH_NETWORKS: "${NET_HOME_CIDR}"
              TZ: "${CLUSTER_TIME_ZONE}"
            image:
              repository: ghcr.io/home-operations/plex
              tag: 1.41.6.9685@sha256:37d36646471fb905a0080daaaa1f09ad3370b06149ed5f94dad73ead591cad0e
            probes:
              liveness: &probes
                custom: true
                enabled: true
                spec:
                  failureThreshold: 3
                  httpGet:
                    path: /identity
                    port: &port 32400
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
              readiness: *probes
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10
            resources:
              limits:
                gpu.intel.com/i915: 1
                memory: 12Gi
              requests:
                cpu: 100m
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop: ["ALL"]
              readOnlyRootFilesystem: true
        replicas: ${REPLICAS:=1}
    defaultPodOptions:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: DoesNotExist
      nodeSelector:
        # TODO: Remove role/media nodeSelector once new cluster is built
        role/media: "true"
        intel.feature.node.kubernetes.io/gpu: "true"
      securityContext:
        fsGroup: ${APP_GID:=1000}
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: ${APP_GID:=1000}
        runAsNonRoot: true
        runAsUser: ${APP_UID:=1000}
        supplementalGroups:
          - 44
    persistence:
      config:
        enabled: true
        existingClaim: "${VOLSYNC_PVC:=${APP}}"
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server
      config-cache:
        enabled: true
        existingClaim: "${APP_PVC:=${APP}}"
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Cache
      config-logs:
        enabled: true
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Logs
        type: emptyDir
      media:
        enabled: true
        existingClaim: default-local-storage
        globalMounts:
          - path: /media
            readOnly: true
      tmp:
        enabled: true
        globalMounts:
          - path: /tmp
        type: emptyDir
      transcode:
        enabled: true
        globalMounts:
          - path: /transcode
        type: emptyDir
    route:
      app:
        hostnames:
          - "${HOSTNAME:=${APP}}.${SECRET_DOMAIN}"
        parentRefs:
          - name: external
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: "${APP}"
                port: *port
            filters:
              - type: RequestHeaderModifier
                requestHeaderModifier:
                  remove: ["Range"]
            matches:
              - path:
                  type: PathPrefix
                  value: /library/streams
          - backendRefs:
              - name: "${APP}"
                port: *port
    service:
      app:
        annotations:
          lbipam.cilium.io/ips: "${SVC_PLEX}"
        controller: "${APP}"
        ports:
          http:
            port: *port
        type: LoadBalancer
