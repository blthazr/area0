---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app plex
spec:
  chart:
    spec:
      chart: app-template
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      version: 3.1.0
  dependsOn:
    - name: intel-device-plugin-gpu
      namespace: kube-system
    - name: rook-ceph-cluster
      namespace: rook-ceph
    - name: volsync
      namespace: volsync-system
  install:
    remediation:
      retries: 3
  interval: 30m
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
      strategy: rollback
  values:
    controllers:
      plex:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            env:
              TZ: "${CLUSTER_TIME_ZONE}"
            image:
              repository: ghcr.io/onedr0p/plex
              tag: 1.40.2.8395-c67dce28e@sha256:44a520cfc646ea1afdcb3ab24917a77aff617eed6946eaaf1e265cf214656971
            probes:
              liveness: &probes
                custom: true
                enabled: true
                spec:
                  failureThreshold: 3
                  httpGet:
                    path: /identity
                    port: &port 32400
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
              readiness: *probes
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10
            resources:
              limits:
                gpu.intel.com/i915: 1
                memory: 12Gi
              requests:
                cpu: 100m
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop: ["ALL"]
              readOnlyRootFilesystem: true
    defaultPodOptions:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values: ["frigate"]
              topologyKey: kubernetes.io/hostname
      nodeSelector:
        intel.feature.node.kubernetes.io/gpu: "true"
        role/media: "true"
      securityContext:
        fsGroup: ${APP_GID}
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: ${APP_GID}
        runAsNonRoot: true
        runAsUser: ${APP_UID}
        seccompProfile:
          type: RuntimeDefault
        supplementalGroups:
          - 44
          - 100
    ingress:
      app:
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          hajimari.io/group: Media
          hajimari.io/icon: mdi:plex
          hajimari.io/info: Streaming Media Server
          hajimari.io/url: "https://${HOSTNAME:-${APP}}.${SECRET_DOMAIN}/web/index.html"
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
        className: external
        enabled: true
        hosts:
          - host: "${HOSTNAME:-${APP}}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        enabled: true
        existingClaim: "${APP_PVC:-${APP}}"
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server
      logs:
        enabled: true
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Logs
        type: emptyDir
      media:
        enabled: true
        existingClaim: local-media
        globalMounts:
          - path: /media
            readOnly: true
      plex-cache:
        enabled: true
        existingClaim: plex-cache
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Cache
      tmp:
        enabled: true
        globalMounts:
          - path: /tmp
        type: emptyDir
      transcode:
        enabled: true
        globalMounts:
          - path: /transcode
        type: emptyDir
    service:
      app:
        annotations:
          io.cilium/lb-ipam-ips: "${CLUSTER_LB_PLEX}"
        controller: plex
        ports:
          http:
            port: *port
        type: LoadBalancer
