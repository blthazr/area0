---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app plex
spec:
  chart:
    spec:
      chart: app-template
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      version: 3.7.1
  dependsOn:
    - name: intel-device-plugin-gpu
      namespace: kube-system
    - name: rook-ceph-cluster
      namespace: rook-ceph
  install:
    remediation:
      retries: 3
  interval: 30m
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
      strategy: rollback
  values:
    controllers:
      plex:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            env:
              PLEX_ADVERTISE_URL: "https://${HOSTNAME:=${APP}}.${SECRET_DOMAIN}:443,http://${CLUSTER_LB_PLEX}:32400"
              PLEX_NO_AUTH_NETWORKS: "${NET_HOME_CIDR}"
              TZ: "${CLUSTER_TIME_ZONE}"
            image:
              repository: ghcr.io/onedr0p/plex
              tag: 1.41.4.9463-630c9f557@sha256:1f66577fe4fa60dc0984d568ca55fb5c2b3fae8498ef96ac1ed57710517552be
            probes:
              liveness: &probes
                custom: true
                enabled: true
                spec:
                  failureThreshold: 3
                  httpGet:
                    path: /identity
                    port: &port 32400
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
              readiness: *probes
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10
            resources:
              limits:
                gpu.intel.com/i915: 1
                memory: 12Gi
              requests:
                cpu: 100m
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop: ["ALL"]
              readOnlyRootFilesystem: true
    defaultPodOptions:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: DoesNotExist
      nodeSelector:
        intel.feature.node.kubernetes.io/gpu: "true"
        # TODO: Remove role/media nodeSelector once new cluster is built
        role/media: "true"
      securityContext:
        fsGroup: ${APP_GID:=1000}
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: ${APP_GID:=1000}
        runAsNonRoot: true
        runAsUser: ${APP_UID:=1000}
        supplementalGroups:
          - 44
          - 100
    ingress:
      app:
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          nginx.ingress.kubernetes.io/server-snippet: |
            location ~ ^/library/streams {
              proxy_set_header        Range "";
              proxy_pass              http://${HOSTNAME:=${APP}}.media.svc.cluster.local:32400;
              proxy_http_version      1.1;
            }
        className: external
        enabled: true
        hosts:
          - host: "${HOSTNAME:=${APP}}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        enabled: true
        existingClaim: "${VOLSYNC_PVC:=${APP}}"
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server
      config-cache:
        enabled: true
        existingClaim: "${APP_PVC:=${APP}}"
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Cache
      config-logs:
        enabled: true
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Logs
        type: emptyDir
      media:
        enabled: true
        existingClaim: local-media
        globalMounts:
          - path: /media
            readOnly: true
      tmp:
        enabled: true
        globalMounts:
          - path: /tmp
        type: emptyDir
      transcode:
        enabled: true
        globalMounts:
          - path: /transcode
        type: emptyDir
    service:
      app:
        annotations:
          lbipam.cilium.io/ips: "${CLUSTER_LB_PLEX}"
        controller: *app
        ports:
          http:
            port: *port
        type: LoadBalancer
