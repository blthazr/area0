---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app plex
spec:
  chart:
    spec:
      chart: app-template
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      version: 2.0.3
  dependsOn:
    - name: intel-device-plugin-gpu
      namespace: kube-system
    - name: rook-ceph-cluster
      namespace: rook-ceph
    - name: volsync
      namespace: volsync
  install:
    remediation:
      retries: 3
  interval: 30m
  maxHistory: 2
  uninstall:
    keepHistory: false
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            env:
              TZ: "${CLUSTER_TIME_ZONE}"
            image:
              repository: ghcr.io/onedr0p/plex
              tag: 1.32.8.7639-fb6452ebf@sha256:637fe10cef736f249d96cb004c12f81646c81ca17ddce22374ea8782aa6646c2
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  failureThreshold: 3
                  httpGet:
                    path: /identity
                    port: 32400
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
              readiness: *probes
              startup:
                enabled: false
            resources:
              limits:
                gpu.intel.com/i915: 1
                memory: 10000Mi
              requests:
                cpu: 100m
                gpu.intel.com/i915: 1
                memory: 2000Mi
        pod:
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: app.kubernetes.io/name
                        operator: In
                        values: ["frigate"]
                  topologyKey: kubernetes.io/hostname
          nodeSelector:
            intel.feature.node.kubernetes.io/gpu: "true"
            node-role.kubernetes.io/media: "true"
            node-role.kubernetes.io/worker: "true"
          securityContext:
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 568
            runAsUser: 568
            supplementalGroups:
              - 44 # cat /etc/group | grep "video"
              - 107 # cat /etc/group | grep "render"
              - 100
    ingress:
      main:
        annotations:
          external-dns.home.arpa/enabled: "true"
          hajimari.io/group: Media
          hajimari.io/icon: mdi:plex
          hajimari.io/info: Streaming Media Server
          hajimari.io/url: "https://plex.${SECRET_DOMAIN}/web/index.html"
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
        className: nginx
        enabled: true
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      backup:
        enabled: true
        globalMounts:
          - path: /backup
        path: "${NAS_NFS_PATH}/backup/app/plex"
        server: "${NAS_ADDRESS}"
        type: nfs
      config:
        enabled: true
        existingClaim: plex-config-v1
        globalMounts:
          - path: /config
      media:
        enabled: true
        existingClaim: nfs-media
        globalMounts:
          - path: /media
            readOnly: true
      transcode:
        enabled: true
        globalMounts:
          - path: /transcode
        type: emptyDir
    service:
      main:
        annotations:
          metallb.universe.tf/allow-shared-ip: *app
        externalTrafficPolicy: Local
        loadBalancerIP: "${SVC_PLEX_ADDRESS}"
        ports:
          http:
            port: 32400
        type: LoadBalancer
