---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app lidarr
spec:
  chart:
    spec:
      chart: app-template
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      version: 2.4.0
  dependsOn:
    - name: local-path-provisioner
      namespace: storage
    - name: volsync
      namespace: storage
  install:
    remediation:
      retries: 3
  interval: 30m
  uninstall:
    keepHistory: false
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 14.10@sha256:71ddc70edccf201d6a521fe6216bc58d8c7c856a1ef96c4d4fbe9f548818ea4d
            envFrom: &envFrom
              - secretRef:
                  name: lidarr-secret
        containers:
          main:
            env:
              # Ref: https://github.com/Radarr/Radarr/issues/7030#issuecomment-1039689518
              # Ref: https://github.com/dotnet/runtime/issues/9336
              COMPlus_EnableDiagnostics: "0"
              LIDARR__AUTHENTICATION_METHOD: External
              LIDARR__AUTHENTICATION_REQUIRED: DisabledForLocalAddresses
              LIDARR__INSTANCE_NAME: Lidarr
              LIDARR__LOG_LEVEL: info
              LIDARR__PORT: &port 8686
              LIDARR__THEME: dark
              TZ: "${CLUSTER_TIME_ZONE}"
            envFrom: *envFrom
            image:
              repository: ghcr.io/onedr0p/lidarr-develop
              tag: 2.1.6.3993@sha256:90ddf2dc118a5fe9fbb6953f20047ffabbd86d0e1e6c3bf948da354719f8d433
            probes:
              liveness: &probes
                custom: true
                enabled: true
                spec:
                  failureThreshold: 3
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
              readiness: *probes
              startup:
                enabled: false
            resources:
              limits:
                memory: 1Gi
              requests:
                cpu: 10m
        pod:
          securityContext:
            fsGroup: ${APP_GID}
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: ${APP_GID}
            runAsUser: ${APP_UID}
            supplementalGroups:
              - 100
    ingress:
      main:
        annotations:
          hajimari.io/group: Media Management
          hajimari.io/icon: mdi:headphones
          hajimari.io/info: Music Collection Manager
        className: internal
        enabled: true
        hosts:
          - host: &host "${HOSTNAME:-${APP}.${SECRET_DOMAIN}}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        existingClaim: lidarr-config
        globalMounts:
          - path: /config
      media:
        enabled: true
        existingClaim: nfs-media
        globalMounts:
          - path: /media
    service:
      main:
        ports:
          http:
            port: *port
