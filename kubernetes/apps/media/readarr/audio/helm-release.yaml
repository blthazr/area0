---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app readarr-audio
spec:
  chart:
    spec:
      chart: app-template
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      version: 1.5.1
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
    - name: volsync
      namespace: volsync
  install:
    remediation:
      retries: 3
  interval: 30m
  maxHistory: 2
  uninstall:
    keepHistory: false
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    env:
      READARR__APPLICATION_URL: "https://readarr-audio.${SECRET_DOMAIN}"
      READARR__INSTANCE_NAME: Readarr Audio
      READARR__PORT: &port 8787
      TZ: "${CLUSTER_TIME_ZONE}"
    envFrom:
      - secretRef:
          name: *app
    image:
      repository: ghcr.io/onedr0p/readarr-develop
      tag: 0.3.4.2207@sha256:020eb6fdfe8950f3f904e637acba5d4e7315542190b8bd90fc083f9152a67c62
    ingress:
      main:
        annotations:
          hajimari.io/appName: Readarr Audio
          hajimari.io/group: Media-Automation
          hajimari.io/icon: mdi:podcast
          hajimari.io/info: Audiobook collection manager
        enabled: true
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        ingressClassName: nginx
        tls:
          - hosts:
              - *host
    nodeSelector:
      node-role.kubernetes.io/media: "true"
      node-role.kubernetes.io/worker: "true"
    persistence:
      backup:
        enabled: true
        mountPath: /config/Backups
        path: "${NAS_NFS_PATH}/backup/app/readarr-audio"
        server: "${NAS_ADDRESS}"
        type: nfs
      config:
        enabled: true
        existingClaim: readarr-audio-config-v1
      media:
        enabled: true
        mountPath: /media
        path: "${MEDIA_SERVER_NFS_PATH}"
        server: "${MEDIA_SERVER_ADDRESS}"
        type: nfs
    podAnnotations:
      secret.reloader.stakater.com/reload: *app
    podSecurityContext:
      fsGroup: 568
      fsGroupChangePolicy: OnRootMismatch
      runAsGroup: 568
      runAsUser: 568
      supplementalGroups:
        - 100
    service:
      main:
        ports:
          http:
            port: *port
