---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app tautulli
spec:
  chart:
    spec:
      chart: app-template
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      version: 3.4.0
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
    - name: volsync
      namespace: volsync-system
  install:
    remediation:
      retries: 3
  interval: 30m
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
      strategy: rollback
  values:
    controllers:
      tautulli:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            args:
              - --config
              - /config/config.ini
              - --datadir
              - /config
              - --port
              - "8181"
            command:
              - "/usr/local/bin/python"
              - "Tautulli.py"
            env:
              TZ: "${CLUSTER_TIME_ZONE}"
            image:
              repository: ghcr.io/tautulli/tautulli
              tag: v2.14.5@sha256:6017b491d8e9100a97391b639fff5824ad36a315c69aae3c9ed78407994a626e
            nameOverride: *app
            probes:
              liveness: &probes
                custom: true
                enabled: true
                spec:
                  failureThreshold: 3
                  httpGet:
                    path: /status
                    port: &port 8181
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
              readiness: *probes
            resources:
              limits:
                memory: 1Gi
              requests:
                cpu: 10m
            securityContext: &securityContext
              allowPrivilegeEscalation: false
              capabilities:
                drop: ["ALL"]
              readOnlyRootFilesystem: true
          jbops:
            env:
              GITSYNC_PERIOD: 24h
              GITSYNC_REF: master
              GITSYNC_REPO: https://github.com/blacktwin/JBOPS
              GITSYNC_ROOT: /add-ons
            image:
              repository: registry.k8s.io/git-sync/git-sync
              tag: v4.3.0@sha256:5813a7da0ccd58f6dfb9d5e48480e2877355e6bb3d7d81c8908eb1adc3a23b6e
            resources:
              limits:
                memory: 128Mi
              requests:
                cpu: 10m
            securityContext: *securityContext
    defaultPodOptions:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: DoesNotExist
      securityContext:
        fsGroup: ${APP_GID}
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: ${APP_GID}
        runAsNonRoot: true
        runAsUser: ${APP_UID}
        seccompProfile:
          type: RuntimeDefault
    ingress:
      app:
        annotations:
          hajimari.io/appName: Tautulli
          hajimari.io/group: Media Management
          hajimari.io/icon: mdi:chart-bar
        className: internal
        enabled: true
        hosts:
          - host: "${HOSTNAME:-${APP}}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
    persistence:
      add-ons:
        enabled: true
        globalMounts:
          - path: /add-ons
        type: emptyDir
      cache:
        enabled: true
        existingClaim: tautulli-cache
        globalMounts:
          - path: /config/cache
      config:
        enabled: true
        existingClaim: "${APP_PVC:-${APP}}"
        globalMounts:
          - path: /config
      logs:
        enabled: true
        globalMounts:
          - path: /config/logs
        type: emptyDir
      tmp:
        enabled: true
        globalMounts:
          - path: /tmp
        type: emptyDir
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
