---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app beets
spec:
  chart:
    spec:
      chart: app-template
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      version: 3.6.1
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
  install:
    remediation:
      retries: 3
  interval: 30m
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
      strategy: rollback
  values:
    controllers:
      beets:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            env:
              BETANIN_HOST: 0.0.0.0
              BETANIN_PORT: &port 80
              MODE: betanin
              TZ: "America/Chicago"
            image:
              repository: ghcr.io/jee-r/beets
              tag: latest@sha256:b21e06d649e19f1f650b0d054b96abd4689a690d808893be9269f5d9f1a95c3c
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10
            resources:
              limits:
                memory: 1Gi
              requests:
                cpu: 10m
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop: ["ALL"]
              readOnlyRootFilesystem: true
    defaultPodOptions:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: DoesNotExist
      nodeSelector:
        # TODO: Remove role/media nodeSelector once new cluster is built
        role/media: "true"
      securityContext:
        fsGroup: ${APP_GID:=1000}
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: ${APP_GID:=1000}
        runAsNonRoot: true
        runAsUser: ${APP_UID:=1000}
        seccompProfile:
          type: RuntimeDefault
        supplementalGroups:
          - 100
    ingress:
      app:
        className: internal
        enabled: true
        hosts:
          - host: "${HOSTNAME:=${APP}}.${DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        enabled: true
        existingClaim: "${VOLSYNC_PVC:=${APP}}"
        globalMounts:
          - path: /config
      media:
        enabled: true
        existingClaim: local-media
        globalMounts:
          - path: /media
            readOnly: true
      tmp:
        enabled: true
        globalMounts:
          - path: /tmp
        type: emptyDir
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
