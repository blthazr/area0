---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app prowlarr
spec:
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    remediation:
      retries: 3
  interval: 30m
  maxHistory: 2
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    env:
      PROWLARR__INSTANCE_NAME: Prowlarr
      PROWLARR__LOG_LEVEL: info
      PROWLARR__PORT: &port 9696
      TZ: "${CLUSTER_TIME_ZONE}"
    envFrom:
      - secretRef:
          name: *app
    image:
      repository: ghcr.io/onedr0p/prowlarr-develop
      tag: 1.8.1.3837@sha256:7070b1056d12c95cda997186974997a99e78aec5ebdd471517180431a5c06979
    ingress:
      main:
        annotations:
          hajimari.io/group: Media-Automation
          hajimari.io/icon: mdi:movie-search
          hajimari.io/info: Indexer Manager
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_set_header Accept-Encoding "";
            sub_filter
            '</head>'
            '<link rel="stylesheet" type="text/css" href="https://theme-park.${SECRET_DOMAIN}/css/base/prowlarr/prowlarr-base.css">
            <link rel="stylesheet" type="text/css" href="https://theme-park.${SECRET_DOMAIN}/css/addons/prowlarr/prowlarr-darker/prowlarr-darker.css">
            </head>';
            sub_filter_once on;
        enabled: true
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        ingressClassName: nginx
        tls:
          - hosts:
              - *host
    initContainers:
      01-init-db:
        envFrom:
          - secretRef:
              name: *app
        image: ghcr.io/onedr0p/postgres-init:14.8
        imagePullPolicy: IfNotPresent
    nodeSelector:
      node-role.kubernetes.io/worker: "true"
    persistence:
      config:
        enabled: true
        type: emptyDir
    podAnnotations:
      secret.reloader.stakater.com/reload: *app
    podSecurityContext:
      fsGroup: 568
      fsGroupChangePolicy: OnRootMismatch
      runAsGroup: 568
      runAsUser: 568
    probes:
      liveness: &probes
        enabled: true
        custom: true
        spec:
          httpGet:
            path: /ping
            port: *port
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
      readiness: *probes
      startup:
        enabled: false
    service:
      main:
        ports:
          http:
            port: *port
