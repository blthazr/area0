---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app prowlarr
spec:
  chart:
    spec:
      chart: app-template
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      version: 2.4.0
  install:
    remediation:
      retries: 3
  interval: 30m
  uninstall:
    keepHistory: false
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 14.10@sha256:71ddc70edccf201d6a521fe6216bc58d8c7c856a1ef96c4d4fbe9f548818ea4d
              pullPolicy: IfNotPresent
            envFrom: &envFrom
              - secretRef:
                  name: prowlarr-secret
        containers:
          main:
            env:
              # Ref: https://github.com/Radarr/Radarr/issues/7030#issuecomment-1039689518
              # Ref: https://github.com/dotnet/runtime/issues/9336
              COMPlus_EnableDiagnostics: "0"
              PROWLARR__AUTHENTICATION_METHOD: External
              PROWLARR__AUTHENTICATION_REQUIRED: DisabledForLocalAddresses
              PROWLARR__INSTANCE_NAME: Prowlarr
              PROWLARR__LOG_LEVEL: info
              PROWLARR__PORT: &port 9696
              PROWLARR__THEME: dark
              TZ: "${CLUSTER_TIME_ZONE}"
            envFrom: *envFrom
            image:
              repository: ghcr.io/onedr0p/prowlarr-develop
              tag: 1.12.2.4211@sha256:14fc79c3380bba72cd635dc6fa5949ac149c29f8a1afea8308ffe5490d0208f9
            probes:
              liveness: &probes
                custom: true
                enabled: true
                spec:
                  failureThreshold: 3
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
              readiness: *probes
              startup:
                enabled: false
            resources:
              limits:
                memory: 1Gi
              requests:
                cpu: 10m
                memory: 128M
        pod:
          securityContext:
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 568
            runAsUser: 568
    ingress:
      main:
        annotations:
          hajimari.io/group: Media Management
          hajimari.io/icon: mdi:movie-search
          hajimari.io/info: Indexer Manager
        className: internal
        enabled: true
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        globalMounts:
          - path: /config
        type: emptyDir
    service:
      main:
        ports:
          http:
            port: *port
