---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app prowlarr
spec:
  chart:
    spec:
      chart: app-template
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      version: 3.5.1
  install:
    remediation:
      retries: 3
  interval: 30m
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
      strategy: rollback
  values:
    controllers:
      prowlarr:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            env:
              PROWLARR__APP__INSTANCENAME: "${APP}"
              PROWLARR__APP__THEME: dark
              PROWLARR__AUTH__METHOD: External
              PROWLARR__AUTH__REQUIRED: DisabledForLocalAddresses
              PROWLARR__LOG__DBENABLED: "False"
              PROWLARR__LOG__LEVEL: info
              PROWLARR__SERVER__PORT: &port 80
              PROWLARR__UPDATE__BRANCH: develop
              TZ: "${CLUSTER_TIME_ZONE}"
            envFrom: &envFrom
              - secretRef:
                  name: "${APP}-secret"
            image:
              repository: ghcr.io/onedr0p/prowlarr-develop
              tag: 1.25.1.4770@sha256:8b59eb7f9e5321b702bdacae3468b63d71720091ba3b0e9dfaca686a7705d2b8
            nameOverride: *app
            probes:
              liveness: &probes
                custom: true
                enabled: true
                spec:
                  failureThreshold: 3
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
              readiness: *probes
            resources:
              limits:
                memory: 1Gi
              requests:
                cpu: 10m
                memory: 128M
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop: ["ALL"]
              readOnlyRootFilesystem: true
        initContainers:
          init-db:
            envFrom: *envFrom
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
    defaultPodOptions:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: DoesNotExist
      securityContext:
        fsGroup: ${APP_GID}
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: ${APP_GID}
        runAsNonRoot: true
        runAsUser: ${APP_UID}
        seccompProfile:
          type: RuntimeDefault
    ingress:
      app:
        annotations:
          hajimari.io/appName: Prowlarr
          hajimari.io/group: Media Management
          hajimari.io/icon: mdi:movie-search
        className: internal
        enabled: true
        hosts:
          - host: "${HOSTNAME:-${APP}}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        enabled: true
        globalMounts:
          - path: /config
        type: emptyDir
      tmp:
        enabled: true
        globalMounts:
          - path: /tmp
        type: emptyDir
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
