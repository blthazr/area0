---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app system-upgrade-controller
spec:
  chart:
    spec:
      chart: app-template
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      version: 2.6.0
  install:
    remediation:
      retries: 3
  interval: 30m
  uninstall:
    keepHistory: false
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      main:
        containers:
          main:
            env:
              SYSTEM_UPGRADE_CONTROLLER_DEBUG: false
              SYSTEM_UPGRADE_CONTROLLER_NAME: *app
              SYSTEM_UPGRADE_CONTROLLER_NAMESPACE:
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.namespace
              SYSTEM_UPGRADE_CONTROLLER_THREADS: 2
              SYSTEM_UPGRADE_JOB_ACTIVE_DEADLINE_SECONDS: 900
              SYSTEM_UPGRADE_JOB_BACKOFF_LIMIT: 99
              SYSTEM_UPGRADE_JOB_IMAGE_PULL_POLICY: IfNotPresent
              SYSTEM_UPGRADE_JOB_KUBECTL_IMAGE: docker.io/rancher/kubectl:v1.29.0
              SYSTEM_UPGRADE_JOB_PRIVILEGED: true
              SYSTEM_UPGRADE_JOB_TTL_SECONDS_AFTER_FINISH: 900
              SYSTEM_UPGRADE_PLAN_POLLING_INTERVAL: 15m
            image:
              repository: docker.io/rancher/system-upgrade-controller
              tag: v0.13.2@sha256:c3d120c265c3d1167f077bf79a88d0a401dd3a54ce6933e4cb98b2e51a1ed49b
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop: ["ALL"]
              readOnlyRootFilesystem: true
              seccompProfile:
                type: RuntimeDefault
        pod:
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: node-role.kubernetes.io/control-plane
                        operator: Exists
          securityContext:
            runAsGroup: 65534
            runAsNonRoot: true
            runAsUser: 65534
          tolerations:
            - key: CriticalAddonsOnly
              operator: Exists
            - effect: NoSchedule
              key: node-role.kubernetes.io/control-plane
              operator: Exists
            - effect: NoSchedule
              key: node-role.kubernetes.io/master
              operator: Exists
        strategy: RollingUpdate
    persistence:
      etc-ca-certificates:
        enabled: true
        globalMounts:
          - path: /etc/ca-certificates
            readOnly: true
        hostPath: /etc/ca-certificates
        hostPathType: DirectoryOrCreate
        type: hostPath
      etc-pki:
        enabled: true
        globalMounts:
          - path: /etc/pki
            readOnly: true
        hostPath: /etc/pki
        hostPathType: DirectoryOrCreate
        type: hostPath
      etc-ssl:
        enabled: true
        globalMounts:
          - path: /etc/ssl
            readOnly: true
        hostPath: /etc/ssl
        hostPathType: DirectoryOrCreate
        type: hostPath
      tmp:
        enabled: true
        globalMounts:
          - path: /tmp
        type: emptyDir
    service:
      main:
        enabled: false
    serviceAccount:
      create: true
      name: system-upgrade
