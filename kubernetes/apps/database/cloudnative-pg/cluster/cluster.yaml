# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/postgresql.cnpg.io/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres
spec:
  affinity:
    nodeSelector:
      node-role.kubernetes.io/control-plane: ""
    tolerations:
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
  backup:
    barmanObjectStore: &barmanObjectStore
      data:
        compression: bzip2
      destinationPath: s3://cloudnative-pg/
      endpointURL: "http://${MINIO_ADDRESS}:9000"
      s3Credentials:
        accessKeyId:
          name: cloudnative-pg-secret
          key: MINIO_ACCESS_KEY
        secretAccessKey:
          name: cloudnative-pg-secret
          key: MINIO_SECRET_KEY
      # Note: serverName version needs to be incremented
      # when recovering from an existing cnpg cluster
      serverName: &currentCluster postgres16-v6
      wal:
        compression: bzip2
        maxParallel: 8
    retentionPolicy: 30d
  enableSuperuserAccess: true
  # renovate: datasource=docker depName=ghcr.io/cloudnative-pg/postgresql versioning=redhat
  imageName: ghcr.io/cloudnative-pg/postgresql:16.4-56
  instances: ${INSTANCES:=1}
  monitoring:
    enablePodMonitor: true
  postgresql:
    parameters:
      max_connections: "200"
      shared_buffers: 256MB
  primaryUpdateStrategy: unsupervised
  resources:
    limits:
      hugepages-2Mi: 2Gi # Requires sysctl set on the host
      memory: 4Gi
    requests:
      cpu: 200m
  storage:
    size: 20Gi
    storageClass: openebs-hostpath
  superuserSecret:
    name: cloudnative-pg-secret
  # Note: previousCluster needs to be set to the name of the previous
  # cluster when recovering from an existing cnpg cluster
  bootstrap:
    recovery:
      source: &previousCluster postgres16-v5
  # Note: externalClusters is needed when recovering from an existing cnpg cluster
  externalClusters:
    - name: *previousCluster
      barmanObjectStore:
        <<: *barmanObjectStore
        serverName: *previousCluster
