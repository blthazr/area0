---
# yaml-language-server: $schema=https://datreeio.github.io/CRDs-catalog/postgresql.cnpg.io/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres-v17
spec:
  affinity:
    nodeSelector:
      node-role.kubernetes.io/control-plane: ""
    tolerations:
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
  backup:
    barmanObjectStore: &barmanObjectStore
      data:
        compression: bzip2
      destinationPath: s3://cloudnative-pg/
      endpointURL: "http://${MINIO_ADDRESS}:9000"
      s3Credentials:
        accessKeyId:
          name: cloudnative-pg-secret
          key: MINIO_ACCESS_KEY
        secretAccessKey:
          name: cloudnative-pg-secret
          key: MINIO_SECRET_KEY
      # Note: serverName version needs to be incremented
      # when recovering from an existing cnpg cluster
      serverName: &currentCluster postgres17-v0
      wal:
        compression: bzip2
        maxParallel: 8
    retentionPolicy: 30d
  enableSuperuserAccess: true
  # renovate: datasource=docker depName=ghcr.io/cloudnative-pg/postgresql versioning=redhat
  imageName: ghcr.io/cloudnative-pg/postgresql:17.4
  instances: ${INSTANCES:=1}
  monitoring:
    enablePodMonitor: true
  postgresql:
    parameters:
      max_connections: "250"
      shared_buffers: 128MB
  primaryUpdateStrategy: unsupervised
  resources:
    limits:
      hugepages-2Mi: 2Gi # Requires sysctl set on the host
      memory: 4Gi
    requests:
      cpu: 200m
  storage:
    size: 20Gi
    storageClass: openebs-hostpath
  superuserSecret:
    name: cloudnative-pg-secret
  bootstrap:
    # Note: When performing major version upgrades, `runningCluster` needs to be set to the name of the current running cluster
    # initdb:
    #   import:
    #     databases:
    #       - "*"
    #     roles:
    #       - "*"
    #     source:
    #       externalCluster: &runningCluster postgres16-v6
    #     type: monolith
    # Note: When recovering from a backup of the same major version, `previousCluster` needs to be set to the name of the cluster backup to recover
    # recovery:
    #   source: &previousCluster postgres16-v5
  # externalClusters:
    # - # perform major version upgrades
    #   name: *runningCluster
    #   connectionParameters:
    #     host: postgres-ro.database.svc.cluster.local
    #     user: postgres
    #     dbname: postgres
    #     sslmode: require
    #   password:
    #     name: cloudnative-pg-secret
    #     key: password
    # - # recover from a backup of the same major version
    #   name: *previousCluster
    #   barmanObjectStore:
    #     <<: *barmanObjectStore
    #     serverName: *previousCluster
