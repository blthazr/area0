---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app system-upgrade-controller
spec:
  chart:
    spec:
      chart: app-template
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      version: 3.2.1
  install:
    remediation:
      retries: 3
  interval: 30m
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
      strategy: rollback
  values:
    controllers:
      system-upgrade-controller:
        containers:
          app:
            env:
              SYSTEM_UPGRADE_CONTROLLER_DEBUG: false
              SYSTEM_UPGRADE_CONTROLLER_NAME: *app
              SYSTEM_UPGRADE_CONTROLLER_NAMESPACE:
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.namespace
              SYSTEM_UPGRADE_CONTROLLER_THREADS: 2
              SYSTEM_UPGRADE_JOB_ACTIVE_DEADLINE_SECONDS: 900
              SYSTEM_UPGRADE_JOB_BACKOFF_LIMIT: 99
              SYSTEM_UPGRADE_JOB_IMAGE_PULL_POLICY: IfNotPresent
              SYSTEM_UPGRADE_JOB_KUBECTL_IMAGE: registry.k8s.io/kubectl:v1.29.5@sha256:decb8a37a343fd349db3016bb196eb221c59c5e23a09a39b683f4c9418705ab2
              SYSTEM_UPGRADE_JOB_PRIVILEGED: true
              SYSTEM_UPGRADE_JOB_TTL_SECONDS_AFTER_FINISH: 900
              SYSTEM_UPGRADE_PLAN_POLLING_INTERVAL: 15m
            image:
              repository: ghcr.io/buroa/system-upgrade-controller
              tag: v0.14.4@sha256:2ecd7f78ce17874922cba0294fdf676db5c578a19e6b6328592790ac4111ed45
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                  - ALL
              readOnlyRootFilesystem: true
              seccompProfile:
                type: RuntimeDefault
        strategy: RollingUpdate
    defaultPodOptions:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: Exists
      securityContext:
        runAsGroup: ${APP_GID}
        runAsNonRoot: true
        runAsUser: ${APP_UID}
        seccompProfile:
          type: RuntimeDefault
      tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - key: node-role.kubernetes.io/control-plane
          operator: Exists
          effect: NoSchedule
        - key: node-role.kubernetes.io/master
          operator: Exists
          effect: NoSchedule
    persistence:
      etc-ca-certificates:
        enabled: true
        globalMounts:
          - readOnly: true
        hostPath: /etc/ca-certificates
        hostPathType: DirectoryOrCreate
        type: hostPath
      etc-pki:
        enabled: true
        globalMounts:
          - readOnly: true
        hostPath: /etc/pki
        hostPathType: DirectoryOrCreate
        type: hostPath
      etc-ssl:
        enabled: true
        globalMounts:
          - readOnly: true
        hostPath: /etc/ssl
        hostPathType: DirectoryOrCreate
        type: hostPath
      tmp:
        enabled: true
        globalMounts:
          - path: /tmp
        type: emptyDir
    serviceAccount:
      create: true
      name: system-upgrade
