---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app rook-ceph-cluster
spec:
  chart:
    spec:
      chart: *app
      sourceRef:
        kind: HelmRepository
        name: rook-ceph
        namespace: flux-system
      version: v1.13.1
  dependsOn:
    - name: rook-ceph-operator
      namespace: rook-ceph
    - name: snapshot-controller
      namespace: storage
  install:
    remediation:
      retries: 3
  interval: 30m
  timeout: 15m
  uninstall:
    keepHistory: false
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    cephBlockPools:
      - name: ceph-blockpool
        spec:
          failureDomain: host
          replicated:
            size: 3
        storageClass:
          allowVolumeExpansion: true
          enabled: true
          isDefault: true
          name: ceph-block
          parameters:
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            imageFeatures: layering
            imageFormat: '2'
          reclaimPolicy: Delete
    cephBlockPoolsVolumeSnapshotClass:
      deletionPolicy: Delete
      enabled: true
      isDefault: false
      name: csi-ceph-blockpool
    cephClusterSpec:
      crashCollector:
        disable: false
      dashboard:
        enabled: true
        ssl: false
        urlPrefix: /
      network:
        connections:
          requireMsgr2: true
        provider: host
      resources:
        mgr:
          limits:
            cpu: 2000m
            memory: 2Gi
          requests:
            cpu: 500m
            memory: 512Mi
        mon:
          limits:
            cpu: 4000m
            memory: 4Gi
          requests:
            cpu: 1000m
            memory: 1Gi
        osd:
          limits:
            cpu: 4000m
            memory: 8Gi
          requests:
            cpu: 1000m
            memory: 4Gi
      storage:
        config:
          osdsPerDevice: '1'
        nodes:
          - devices:
              - name: /dev/disk/by-id/ata-Samsung_Portable_SSD_T5_S4B0NR0R719439P
            name: k3s-1
          - devices:
              - name: /dev/disk/by-id/ata-Samsung_Portable_SSD_T5_S4B0NR0R721882L
            name: k3s-2
          - devices:
              - name: /dev/disk/by-id/ata-Samsung_Portable_SSD_T5_S4B0NR0R712678E
            name: k3s-3
        useAllDevices: false
        useAllNodes: false
    cephFileSystems:
      - name: ceph-filesystem
        spec:
          dataPools:
            - failureDomain: host
              name: data0
              replicated:
                size: 3
          metadataPool:
            replicated:
              size: 3
          metadataServer:
            activeCount: 1
            activeStandby: true
            resources:
              limits:
                memory: 4Gi
              requests:
                cpu: 1000m
                memory: 4Gi
        storageClass:
          allowVolumeExpansion: true
          enabled: true
          isDefault: false
          name: ceph-filesystem
          parameters:
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
          pool: data0
          reclaimPolicy: Delete
    cephFileSystemVolumeSnapshotClass:
      deletionPolicy: Delete
      enabled: true
      isDefault: false
      name: csi-ceph-filesystem
    cephObjectStores:
      - name: ceph-objectstore
        spec:
          dataPool:
            erasureCoded:
              codingChunks: 1
              dataChunks: 2
            failureDomain: host
          gateway:
            instances: 2
            port: 80
            resources:
              limits:
                memory: 2Gi
              requests:
                cpu: 1000m
                memory: 1Gi
          healthCheck:
            bucket:
              interval: 60s
          metadataPool:
            failureDomain: host
            replicated:
              size: 3
          preservePoolsOnDelete: true
        storageClass:
          enabled: true
          name: ceph-bucket
          parameters:
            region: us-east-1
          reclaimPolicy: Delete
    configOverride: |
      [global]
      bdev_enable_discard = true
      bdev_async_discard = true
      osd_class_update_on_start = false
    ingress:
      dashboard:
        annotations:
          hajimari.io/appName: Rook
          hajimari.io/group: Management
          hajimari.io/icon: mdi:chess-rook
        host:
          name: &host "rook.${SECRET_DOMAIN}"
          path: /
        ingressClassName: internal
        tls:
          - hosts:
              - *host
    monitoring:
      enabled: true
      createPrometheusRules: true
    toolbox:
      enabled: true
