---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app sabnzbd
spec:
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
    - name: volsync
      namespace: volsync
  install:
    createNamespace: true
    remediation:
      retries: 3
  interval: 30m
  maxHistory: 2
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    env:
      SABNZBD__PORT: &port 8080
      SABNZBD__HOST_WHITELIST_ENTRIES: >-
        sabnzbd,
        sabnzbd.download,
        sabnzbd.download.svc,
        sabnzbd.download.svc.cluster,
        sabnzbd.download.svc.cluster.local,
        sabnzbd.${SECRET_DOMAIN}
      TZ: "${CLUSTER_TIME_ZONE}"
    envFrom:
      - secretRef:
          name: sabnzbd-secret
    image:
      repository: ghcr.io/onedr0p/sabnzbd
      tag: 4.0.3@sha256:aff676e3c234f7a4493c75813e296c347c02b6e5374acd1858f8244ea44f2b4a
    ingress:
      main:
        annotations:
          hajimari.io/group: Media-Automation
          hajimari.io/icon: mdi:download
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_set_header Accept-Encoding "";
            sub_filter '</head>' '<link rel="stylesheet" type="text/css" href="https://theme-park.${SECRET_DOMAIN}/css/base/sabnzbd/dark.css"></head>';
            sub_filter_once on;
        enabled: true
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        ingressClassName: nginx
        tls:
          - hosts:
              - *host
    nodeSelector:
      node-role.kubernetes.io/media: "true"
      node-role.kubernetes.io/worker: "true"
    persistence:
      backup:
        enabled: true
        mountPath: /config/Backup
        path: "${NAS_NFS_PATH}/backup/app/sabnzbd"
        server: "${NAS_ADDRESS}"
        type: nfs
      config:
        enabled: true
        existingClaim: sabnzbd-config-v1
      incomplete:
        enabled: true
        type: emptyDir
      media:
        enabled: true
        mountPath: /media
        path: "${MEDIA_SERVER_NFS_PATH}"
        server: "${MEDIA_SERVER_ADDRESS}"
        type: nfs
    podAnnotations:
      secret.reloader.stakater.com/reload: sabnzbd-secret
    podSecurityContext:
      fsGroup: 568
      fsGroupChangePolicy: OnRootMismatch
      runAsGroup: 568
      runAsUser: 568
      supplementalGroups:
        - 100
    probes:
      liveness: &probes
        custom: true
        enabled: true
        spec:
          failureThreshold: 3
          httpGet:
            path: /api?mode=version
            port: *port
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
      readiness: *probes
      startup:
        enabled: false
    resources:
      limits:
        memory: 8000Mi
      requests:
        cpu: 10m
        memory: 250Mi
    service:
      main:
        ports:
          http:
            port: *port
