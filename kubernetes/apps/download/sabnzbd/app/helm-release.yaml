---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app sabnzbd
spec:
  chart:
    spec:
      chart: app-template
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      version: 2.6.0
  dependsOn:
    - name: local-path-provisioner
      namespace: storage
    - name: volsync
      namespace: storage
  install:
    remediation:
      retries: 3
  interval: 30m
  uninstall:
    keepHistory: false
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            env:
              SABNZBD__PORT: &port 8080
              SABNZBD__HOST_WHITELIST_ENTRIES: >-
                sabnzbd,
                sabnzbd.download,
                sabnzbd.download.svc,
                sabnzbd.download.svc.cluster,
                sabnzbd.download.svc.cluster.local,
                sabnzbd.${SECRET_DOMAIN}
              TZ: "${CLUSTER_TIME_ZONE}"
            envFrom:
              - secretRef:
                  name: sabnzbd-secret
            image:
              repository: ghcr.io/onedr0p/sabnzbd
              tag: 4.2.3@sha256:fa8ddea45e56b0e36454c3c0eb30ff5521d90aeb5b35301656ae9236680be3a9
            probes:
              liveness: &probes
                custom: true
                enabled: true
                spec:
                  failureThreshold: 3
                  httpGet:
                    path: /api?mode=version
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
              readiness: *probes
              startup:
                enabled: false
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop: ["ALL"]
              readOnlyRootFilesystem: true
            resources:
              limits:
                memory: 8Gi
              requests:
                cpu: 10m
        pod:
          securityContext:
            fsGroup: ${APP_GID}
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: ${APP_GID}
            runAsNonRoot: true
            runAsUser: ${APP_UID}
            supplementalGroups: [100]
    ingress:
      main:
        annotations:
          hajimari.io/group: Media Management
          hajimari.io/icon: mdi:download
          hajimari.io/info: Usenet Downloads
        className: internal
        enabled: true
        hosts:
          - host: &host "${HOSTNAME:-${APP}.${SECRET_DOMAIN}}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        existingClaim: "${VOLSYNC_CLAIM}"
        globalMounts:
          - path: /config
      incomplete:
        enabled: true
        globalMounts:
          - path: /incomplete
        type: emptyDir
      media:
        enabled: true
        globalMounts:
          - path: /media
        path: "${MEDIA_SERVER_NFS_PATH}"
        server: "${MEDIA_SERVER_ADDRESS}"
        type: nfs
      tmp:
        enabled: true
        globalMounts:
          - path: /tmp
        type: emptyDir
    service:
      main:
        ports:
          http:
            port: *port
