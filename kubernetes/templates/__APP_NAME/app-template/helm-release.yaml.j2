---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: {{ ENV.APP }}
spec:
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  interval: 1h
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      {{ ENV.APP }}:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            env:
              TZ: "${CLUSTER_TIME_ZONE}"
            # envFrom: &envFrom
            #   - secretRef:
            #       name: "${APP}-secret"
            # image:
            #   repository: __IMAGE_REPO
            #   tag: __IMAGE_TAG
            # probes:
            #   liveness: &probes
            #     custom: true
            #     enabled: true
            #     spec:
            #       failureThreshold: 3
            #       httpGet:
            #         # path: __HTTP_GET_PATH
            #         # port: &port __SERVICE_PORT_NUMBER
            #       initialDelaySeconds: 0
            #       periodSeconds: 10
            #       timeoutSeconds: 1
            #   readiness: *probes
            # resources:
            #   limits:
            #     cpu: 100m
            #     memory: 128Mi
            #   requests:
            #     cpu: 10m
            #     memory: 128Mi
            securityContext: &securityContext
              allowPrivilegeEscalation: false
              capabilities:
                drop: ["ALL"]
              readOnlyRootFilesystem: true
        replicas: ${REPLICAS:=1}
    defaultPodOptions:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: DoesNotExist
      securityContext:
        fsGroup: ${APP_GID:=1000}
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: ${APP_GID:=1000}
        runAsNonRoot: true
        runAsUser: ${APP_UID:=1000}
    ingress:
      app:
        className: internal
        enabled: true
        hosts:
          - host: "${HOSTNAME:=${APP}}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        enabled: true
        existingClaim: "${VOLSYNC_PVC:=${APP}}"
        globalMounts:
          - path: /config
      # __VOLUME_NAME:
      #   enabled: true
      #   existingClaim: "${APP_PVC}"
      #   globalMounts:
      #     - path: /__VOLUME_MOUNT_PATH
      #       # readOnly: true
      tmpfs:
        advancedMounts:
          {{ ENV.APP }}:
            app:
              - path: /tmp
                subPath: tmp
        enabled: true
        type: emptyDir
    service:
      app:
        controller: "${APP}"
        ports:
          http:
            # port: __SERVICE_PORT_NUMBER
            # port: *port
