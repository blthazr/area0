---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

vars:
  FLUX_CLUSTER_SECRET_SOPS_FILE: "{{.KUBERNETES_DIR}}/flux/vars/cluster-secrets.sops.yaml"
  FLUX_CLUSTER_SETTINGS_FILE: "{{.KUBERNETES_DIR}}/flux/vars/cluster-settings.yaml"

tasks:

  # task flux:verify
  verify:
    desc: Verify flux meets the prerequisites
    cmds:
      - flux check --pre
    preconditions:
      - { msg: "flux not in $PATH", sh: "command -v flux" }

  # task flux:reconcile
  reconcile:
    desc: Force update Flux to pull in changes from the repository
    cmds:
      - flux reconcile -n flux-system source git area0
      - flux reconcile -n flux-system kustomization flux
    preconditions:
      - { msg: "flux not in $PATH", sh: "command -v flux" }

  # task flux:sync:all
  sync:all:
    desc: Synchronize all Flux resources
    cmds:
      - task: sync:sources
      # - task: sync:ks
      # - task: sync:hr
      # - task: sync:alerts
      # - task: sync:receivers

  # task flux:sync:sources
  sync:sources:
    desc: Reconcile Flux sources
    silent: true
    cmds:
      - flux reconcile -n flux-system source git area0
      - flux reconcile -n flux-system source oci flux-manifests
      - flux get sources helm --all-namespaces --no-header | awk '{ print $1, $2}' | xargs -r -n2 sh -c 'flux reconcile source helm $1 --namespace $0'
    preconditions:
      - { msg: "awk not in $PATH", sh: "command -v awk" }
      - { msg: "flux not in $PATH", sh: "command -v flux" }
      - { msg: "xargs not in $PATH", sh: "command -v xargs" }

  # task flux:sync:ks
  sync:ks:
    desc: Reconcile Flux kustomizations
    silent: true
    cmds:
      - flux reconcile kustomization flux --namespace flux-system --with-source
      - sleep 1
      - flux reconcile kustomization cluster --namespace flux-system --with-source
      - sleep 1
      - flux reconcile kustomization cluster-apps --namespace flux-system --with-source
      - sleep 1
      - flux get kustomizations --all-namespaces --no-header  | awk '{ print $1, $2}' | grep -v "flux-system cluster" | grep -v "flux-system flux" | xargs -r -n2 sh -c 'flux reconcile kustomization $1 --namespace $0 --with-source' | xargs
    preconditions:
      - { msg: "awk not in $PATH", sh: "command -v awk" }
      - { msg: "flux not in $PATH", sh: "command -v flux" }
      - { msg: "grep not in $PATH", sh: "command -v grep" }
      - { msg: "xargs not in $PATH", sh: "command -v xargs" }

  # task flux:sync:hr
  sync:hr:
    desc: Reconcile Helm releases
    silent: true
    cmds:
      - flux get helmreleases --all-namespaces --no-header | awk '{ print $1, $2}' | xargs -r -n2 sh -c 'flux reconcile helmrelease $1 --namespace $0 --with-source' | xargs
    preconditions:
      - { msg: "awk not in $PATH", sh: "command -v awk" }
      - { msg: "flux not in $PATH", sh: "command -v flux" }
      - { msg: "xargs not in $PATH", sh: "command -v xargs" }

  # task flux:sync:receivers
  sync:receivers:
    desc: Reconcile Flux receivers
    silent: true
    cmds:
      - flux get receivers --all-namespaces --no-header | awk '{ print $1, $2}' | xargs -r -n2 sh -c 'flux reconcile receiver $1 --namespace $0' | xargs
    preconditions:
      - { msg: "awk not in $PATH", sh: "command -v awk" }
      - { msg: "flux not in $PATH", sh: "command -v flux" }
      - { msg: "xargs not in $PATH", sh: "command -v xargs" }

  # task flux:logs
  logs:
    desc: Get Flux logs
    silent: true
    cmds:
      - flux logs -A --level=error

  # task flux:logs:follow
  logs:follow:
    desc: Follow Flux logs
    silent: true
    cmds:
      - flux logs -A -f --level=error

  # task flux:hr:restart
  hr:restart:
    desc: Restart all failed Helm Releases
    silent: true
    cmds:
      - flux get helmreleases --all-namespaces --no-header --status-selector ready=false | awk '{ print $1, $2}' | xargs -r -n2 sh -c 'flux suspend helmrelease $1 --namespace $0' | xargs
      - flux get helmreleases --all-namespaces --no-header --status-selector ready=false | awk '{ print $1, $2}' | xargs -r -n2 sh -c 'flux resume helmrelease $1 --namespace $0' | xargs
