---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

x-env: &env
  disk: "{{.disk}}"
  job: "{{.job}}"
  node: "{{.node}}"

vars:
  ROOK_TEMPLATES_DIR: "{{.ROOT_DIR}}/.taskfiles/rook/templates"

tasks:

  # task rook:reset cephnode=k8s-1 cephdisk=/dev/sdb
  reset:
    desc: Reset Rook
    summary: |
      Args:
        cephnode: Node the data is on (required)
        cephdisk: Disk to wipe (required)
    vars: &vars
      disk: "{{.cephdisk}}"
      node: "{{.ITEM}}"
    cmds:
      - for: { var: cephnode }
        task: wipe-data
        vars: *vars
      - for: { var: cephnode }
        task: reset-disk
        vars: *vars
    requires:
      vars:
        - cephnode
        - cephdisk
    preconditions:
      - msg: "Missing wait-for-job script"
        sh: "test -f {{.TASK_SCRIPTS_DIR}}/wait-for-job.sh"
      - msg: "Missing WipeDataJob template"
        sh: "test -f {{.ROOK_TEMPLATES_DIR}}/WipeDataJob.tmpl.yaml"
      - msg: "Missing WipeDiskJob template"
        sh: "test -f {{.ROOK_TEMPLATES_DIR}}/WipeDiskJob.tmpl.yaml"

  # task rook:wipe-data node=<node_name>
  wipe-data:
    desc: Wipe rook data on a node
    prompt: Wipe rook data on node '{{.node}}' ... continue?
    summary: |
      Args:
        node: Node the data is on (required)
    cmds:
      - envsubst < <(cat {{.ROOK_TEMPLATES_DIR}}/WipeDataJob.tmpl.yaml) | kubectl apply -f -
      - bash {{.TASK_SCRIPTS_DIR}}/wait-for-job.sh {{.job}} default
      - kubectl -n default wait job/{{.job}} --for condition=complete --timeout=1m
      - kubectl -n default logs job/{{.job}}
      - kubectl -n default delete job {{.job}}
    env: *env
    requires:
      vars:
        - node
    vars:
      job: wipe-data-{{.node}}
    preconditions:
      - msg: "Missing wait-for-job script"
        sh: "test -f {{.TASK_SCRIPTS_DIR}}/wait-for-job.sh"
      - msg: "Missing WipeDataJob template"
        sh: "test -f {{.ROOK_TEMPLATES_DIR}}/WipeDataJob.tmpl.yaml"

  # task rook:reset-disk node=<node_name> disk=<disk_path>
  reset-disk:
    desc: Reset a rook disk on a node
    prompt: Reset rook disk with '{{.node}} {{.disk}}' ... continue?
    summary: |
      Args:
        disk: Disk to wipe (required)
        node: Node the disk is on (required)
    cmds:
      - envsubst < <(cat {{.ROOK_TEMPLATES_DIR}}/WipeDiskJob.tmpl.yaml) | kubectl apply -f -
      - bash {{.TASK_SCRIPTS_DIR}}/wait-for-job.sh {{.job}} default
      - kubectl -n default wait job/{{.job}} --for condition=complete --timeout=1m
      - kubectl -n default logs job/{{.job}}
      - kubectl -n default delete job {{.job}}
    env: *env
    requires:
      vars:
        - disk
        - node
    vars:
      job: wipe-disk-{{.node}}-{{.disk | replace "/" "-"}}
    preconditions:
      - msg: "Missing wait-for-job script"
        sh: "test -f {{.TASK_SCRIPTS_DIR}}/wait-for-job.sh"
      - msg: "Missing WipeDiskJob template"
        sh: "test -f {{.ROOK_TEMPLATES_DIR}}/WipeDiskJob.tmpl.yaml"
