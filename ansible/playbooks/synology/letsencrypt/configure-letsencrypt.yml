# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#   @file           :   playbooks/synology/configure-letsencrypt.yml
#   @description    :   configure letsencrypt for synology nas
#   @usage          :   ansible-playbook playbooks/synology/configure-letsencrypt.yml
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
---
- hosts:
    - synology
  become: true
  gather_facts: true

  vars:
    acme_home: "/usr/local/share/acme.sh"

  tasks:
    - name: load sops encrypted variables
      community.sops.load_vars:
        file: cloudflare.sops.yml
      become: false
      delegate_to: localhost
      run_once: true

    - name: download acme.sh
      ansible.builtin.unarchive:
        dest: /tmp
        src: https://github.com/acmesh-official/acme.sh/archive/master.tar.gz
        remote_src: true

    - name: create acme home directory
      ansible.builtin.file:
        path: "{{ acme_home }}"
        state: directory

    - name: install acme.sh
      ansible.builtin.shell:
        chdir: /tmp/acme.sh-master
        cmd: "./acme.sh --install --nocron --home {{ acme_home }} --accountemail {{ cloudflare_email }}"

    - name: configure notifications
      ansible.builtin.shell:
        chdir: /tmp/acme.sh-master
        cmd: |
          source ~/.profile
          ./acme.sh --set-notify --notify-level 3 --notify-hook discord
      environment:
        DISCORD_WEBHOOK_URL: "{{ le_discord_webhook }}"

    - name: create the certificate
      ansible.builtin.shell:
        chdir: "{{ acme_home }}"
        cmd: |
          source ~/.profile
          ./acme.sh --issue --home {{ acme_home }} -d {{ '*.' + cloudflare_domain }} --dns dns_cf
      environment:
        CF_Token: "{{ cloudflare_letsencrypt_token }}"
        CF_Email: "{{ cloudflare_email }}"

    - name: deploy the certificate
      ansible.builtin.shell:
        chdir: "{{ acme_home }}"
        cmd: |
          source ~/.profile
          ./acme.sh --insecure --deploy --home {{ acme_home }} -d {{ '*.' + cloudflare_domain }} --deploy-hook synology_dsm
      environment:
        SYNO_Username: "{{ synology_username }}"
        SYNO_Password: "{{ synology_password }}"
        SYNO_Certificate: "LetsEncrypt | {{ cloudflare_domain }}"
        SYNO_Create: 1
        SYNO_Scheme: "https"
        SYNO_Port: "5011"

    - name: configure certificate renewal
      ansible.builtin.debug:
        msg:
          - "In DSM control panel, open the 'Task Scheduler' and create a new scheduled task for a user-defined script."
          - "  - General Setting: Task - Update default Cert. User - root"
          - "  - Schedule: Setup a weekly renewal. For example, 11:00 am every saturday."
          - "  - Task setting: User-defined-script:"
          - "# renew certificates"
          - "/usr/local/share/acme.sh/acme.sh --cron --home /usr/local/share/acme.sh/"
