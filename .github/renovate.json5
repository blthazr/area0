{
  "extends": [
    ":dependencyDashboard",
    ":disableRateLimiting",
    ":enablePreCommit",
    ":enableRenovate",
    ":semanticCommits",
    ":separatePatchReleases",
    "config:base",
    "docker:enableMajor",
    "github>christopherburnham/area0//.github/renovate/autoMerge",
    "github>christopherburnham/area0//.github/renovate/commitMessage",
    "github>christopherburnham/area0//.github/renovate/labels",
    "github>christopherburnham/area0//.github/renovate/packageGroups",
    "github>christopherburnham/area0//.github/renovate/semanticCommits",
    "github>christopherburnham/area0//.github/renovate/versioning",
  ],
  "commitBodyTable": true,
  "dependencyDashboardTitle": "Renovate Dashboard",
  "onboarding": false,
  "platform": "github",
  "rebaseWhen": "conflicted",
  "requireConfig": false,
  "repositories": ["christopherburnham/area0"],
  "suppressNotifications": ["prIgnoreNotification"],
  "timezone": "America/Chicago",

  // configure ignored packages
  "ignoreDeps": [
    "ghcr.io/fluxcd/helm-controller",
    "ghcr.io/fluxcd/image-automation-controller",
    "ghcr.io/fluxcd/image-reflector-controller",
    "ghcr.io/fluxcd/kustomize-controller",
    "ghcr.io/fluxcd/notification-controller",
    "ghcr.io/fluxcd/source-controller",
  ],

  // configure flux manager
  "flux": {
    "fileMatch": ["k8s/cluster/.+\\.ya?ml$"],
  },

  // configure helm-values manager
  "helm-values": {
    "fileMatch": ["k8s/cluster/.+\\.ya?ml$"],
  },

  // configure helmv3 manager
  "helmv3": {
    "fileMatch": ["k8s/charts/.+/Chart\\.ya?ml$"],
  },

  // configure kubernetes manager
  "kubernetes": {
    "fileMatch": ["k8s/cluster/.+\\.ya?ml$"],
  },

  "regexManagers": [
    // configure regex manager for custom resource definitions
    {
      "datasourceTemplate": "helm",
      "fileMatch": ["k8s/cluster/.+\\.ya?ml$"],
      "matchStrings": [
        // cert-manager
        "registryUrl=(?<registryUrl>.*?) chart=(?<depName>.*?)\n.*\\/(?<currentValue>.*?)\\/",
        // external-dns, external-snapshotter
        "datasource=(?<datasource>.*?)\n *url: https://github\\.com/(?<depName>.*?)\\.git\n *ref:\n *tag: (?<currentValue>.*)\n",
        // kube-prometheus-stack
        "registryUrl=(?<registryUrl>.*?)\n *tag: (?<depName>[a-zA-Z-]+)-(?<currentValue>.*)\n",
      ],
    },
  ],

  "packageRules": [
    // configure helm datasource
    {
      "matchDatasources": ["helm"],
      "ignoreDeprecated": true,
    },
  ],
}
