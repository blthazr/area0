---
env:
  TZ: "${CLUSTER_TIME_ZONE}"
image:
  repository: ghcr.io/k8s-at-home/sonarr
  tag: v3.0.9.1549
ingress:
  main:
    annotations:
      nginx.ingress.kubernetes.io/configuration-snippet: |
        proxy_set_header Accept-Encoding "";
        sub_filter '</head>' '<link rel="stylesheet" type="text/css" href="https://theme-park.${SECRET_DOMAIN}/css/base/sonarr/aquamarine.css"><link rel="stylesheet" type="text/css" href="https://theme-park.${SECRET_DOMAIN}/css/addons/sonarr/sonarr-4k-logo/sonarr-4k-logo.css"></head>';
        sub_filter_once on;
    enabled: true
    hosts:
      - host: &host "sonarr4k.${SECRET_DOMAIN}"
        paths:
          - path: /
            pathType: Prefix
    ingressClassName: nginx
    tls:
      - hosts:
          - *host
metrics:
  enabled: true
  exporter:
    env:
      additionalMetrics: true
      port: 9794
      unknownQueueItems: true
    image:
      repository: ghcr.io/onedr0p/exportarr
      tag: v1.1.0
  prometheusRule:
    enabled: false
  serviceMonitor:
    interval: 5m
    scrapeTimeout: 1m
nameOverride: sonarr4k
nodeSelector:
  node-role.kubernetes.io/media: "true"
persistence:
  backup:
    enabled: true
    mountPath: /config/Backups
    readOnly: false
    type: custom
    volumeSpec:
      nfs:
        server: "${NAS_ADDRESS}"
        path: "${NAS_NFS_PATH}/backup/app/sonarr4k"
  config:
    enabled: true
    existingClaim: sonarr4k-config-v1
  media:
    enabled: true
    mountPath: /media
    readOnly: false
    type: custom
    volumeSpec:
      nfs:
        server: "${MEDIA_SERVER_ADDRESS}"
        path: "${MEDIA_SERVER_NFS_PATH}"
podSecurityContext:
  supplementalGroups:
    - 100
