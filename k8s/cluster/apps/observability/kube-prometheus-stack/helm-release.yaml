---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
spec:
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 34.9.0
      sourceRef:
        kind: HelmRepository
        name: prometheus-community-charts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 3
  interval: 5m
  upgrade:
    remediation:
      retries: 3
  values:
    alertmanager:
      alertmanagerSpec:
        storage:
          volumeClaimTemplate:
            spec:
              resources:
                requests:
                  storage: 1Gi
              storageClassName: ceph-block
      config:
        global:
          resolve_timeout: 5m
          slack_api_url: "${SECRET_ALERT_MANAGER_DISCORD_WEBHOOK}"
        inhibit_rules:
          - equal: ["alertname", "namespace"]
            source_match:
              severity: "critical"
            target_match:
              severity: "warning"
        receivers:
          - name: "null"
          - name: "discord"
            slack_configs:
              - channel: "#prometheus-alerts"
                icon_url: https://avatars3.githubusercontent.com/u/3380462
                send_resolved: true
                text: >-
                  {{ range .Alerts -}}
                    **Alert:** {{ .Annotations.title }}{{ if .Labels.severity }} - `{{ .Labels.severity }}`{{ end }}

                  **Description:** {{ if ne .Annotations.description ""}}{{ .Annotations.description }}{{else}}N/A{{ end }}

                  **Details:**
                    {{ range .Labels.SortedPairs }} â€¢ *{{ .Name }}:* `{{ .Value }}`
                    {{ end }}
                  {{ end }}
                title: |-
                  [{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ if ne .CommonAnnotations.summary ""}}{{ .CommonAnnotations.summary }}{{ else }}{{ .CommonLabels.alertname }}{{ end }}
                username: "Prometheus"
        route:
          group_by: ["alertname", "job"]
          group_interval: 5m
          group_wait: 30s
          receiver: "discord"
          repeat_interval: 6h
          routes:
            - receiver: "null"
              match:
                alertname: InfoInhibitor
            - receiver: "null"
              match:
                alertname: Watchdog
            - receiver: "discord"
              continue: true
              match_re:
                severity: critical
      ingress:
        enabled: true
        hosts:
          - "alert-manager.${SECRET_DOMAIN}"
        ingressClassName: nginx
        pathType: Prefix
        tls:
          - hosts:
              - "alert-manager.${SECRET_DOMAIN}"
    fullnameOverride: prometheus
    grafana:
      defaultDashboardsTimezone: "${CLUSTER_TIME_ZONE}"
      enabled: false
      forceDeployDashboards: true
      sidecar:
        dashboards:
          multicluster:
            etcd:
              enabled: true
    kube-state-metrics:
      fullnameOverride: kube-state-metrics
    kubeApiServer:
      enabled: true
    kubeControllerManager:
      enabled: true
      endpoints:
        - "${K3S_CONTROL_NODE_1_ADDRESS}"
        - "${K3S_CONTROL_NODE_2_ADDRESS}"
        - "${K3S_CONTROL_NODE_3_ADDRESS}"
      service:
        enabled: true
        port: 10257
        targetPort: 10257
    kubeEtcd:
      enabled: true
      endpoints:
        - "${K3S_CONTROL_NODE_1_ADDRESS}"
        - "${K3S_CONTROL_NODE_2_ADDRESS}"
        - "${K3S_CONTROL_NODE_3_ADDRESS}"
      service:
        enabled: true
        port: 2381
        targetPort: 2381
    kubeProxy:
      enabled: true
      endpoints:
        - "${K3S_CONTROL_NODE_1_ADDRESS}"
        - "${K3S_CONTROL_NODE_2_ADDRESS}"
        - "${K3S_CONTROL_NODE_3_ADDRESS}"
      service:
        enabled: true
        port: 10249
        targetPort: 10249
    kubeScheduler:
      enabled: true
      endpoints:
        - "${K3S_CONTROL_NODE_1_ADDRESS}"
        - "${K3S_CONTROL_NODE_2_ADDRESS}"
        - "${K3S_CONTROL_NODE_3_ADDRESS}"
      service:
        enabled: true
        port: 10259
        targetPort: 10259
    kubelet:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          - action: replace
            sourceLabels:
              - node
            targetLabel: instance
    prometheus:
      ingress:
        enabled: true
        hosts:
          - "prometheus.${SECRET_DOMAIN}"
        ingressClassName: nginx
        pathType: Prefix
        tls:
          - hosts:
              - "prometheus.${SECRET_DOMAIN}"
      prometheusSpec:
        additionalScrapeConfigs:
          - job_name: minio
            honor_timestamps: true
            metrics_path: /minio/v2/metrics/cluster
            static_configs:
              - targets:
                  - "${SVC_SYNOLOGY_ADDRESS}:9000"
          - job_name: node-exporter
            honor_timestamps: true
            static_configs:
              - targets:
                  - "${SVC_SYNOLOGY_ADDRESS}:9100"
        enableAdminAPI: true
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        replicaExternalLabelName: replica
        replicas: 1
        retention: 6h
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: ceph-block
              resources:
                requests:
                  storage: 10Gi
        thanos:
          image: quay.io/thanos/thanos:v0.25.2
          objectStorageConfig:
            key: objstore.yml
            name: thanos-objstore
          version: v0.22.0
        walCompression: true
      thanosService:
        enabled: true
      thanosServiceMonitor:
        enabled: true
    prometheus-node-exporter:
      fullnameOverride: node-exporter
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels:
                - __meta_kubernetes_pod_node_name
              targetLabel: kubernetes_node
    prometheusOperator:
      prometheusConfigReloader:
        resources:
          limits:
            cpu: 200m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 50Mi
