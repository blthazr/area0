admin:
  existingSecret: grafana-secrets
  passwordKey: admin-password
  userKey: admin-user
dashboardProviders:
  dashboardproviders.yaml:
    apiVersion: 1
    providers:
      - name: default
        disableDeletion: false
        editable: true
        folder: ""
        options:
          path: /var/lib/grafana/dashboards/default
        orgId: 1
        type: file
dashboards:
  default:
    # Ref: https://grafana.com/grafana/dashboards/13502
    minio:
      datasource: Prometheus
      gnetId: 13502
      revision: 10
    # Ref: https://grafana.com/grafana/dashboards/13665
    speedtest:
      datasource: Prometheus
      gnetId: 13665
      revision: 1
    # Ref: https://grafana.com/grafana/dashboards/14364
    synology-overview:
      datasource: Prometheus
      gnetId: 14364
      revision: 8
    # Ref: https://grafana.com/grafana/dashboards/14284
    synology-detail:
      datasource: Prometheus
      gnetId: 14284
      revision: 9
    # Ref: https://grafana.com/grafana/dashboards/11310
    unifi-client-dpi:
      datasource: Prometheus
      gnetId: 11310
      revision: 4
    # Ref: https://grafana.com/grafana/dashboards/11315
    unifi-client-insights:
      datasource: Prometheus
      gnetId: 11315
      revision: 8
    # Ref: https://grafana.com/grafana/dashboards/11311
    unifi-network-sites:
      datasource: Prometheus
      gnetId: 11311
      revision: 4
    # Ref: https://grafana.com/grafana/dashboards/11314
    unifi-uap-insights:
      datasource: Prometheus
      gnetId: 11314
      revision: 9
    # Ref: https://grafana.com/grafana/dashboards/11313
    unifi-usg-insights:
      datasource: Prometheus
      gnetId: 11313
      revision: 8
    # Ref: https://grafana.com/grafana/dashboards/11312
    unifi-usw-insights:
      datasource: Prometheus
      gnetId: 11312
      revision: 8
datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
      - name: Prometheus
        access: proxy
        isDefault: true
        type: prometheus
        url: http://thanos-query:9090/
      - name: Loki
        type: loki
        access: proxy
        url: http://loki:3100
    deleteDatasources:
      - name: Loki
        orgId: 1
env:
  GF_DATE_FORMATS_FULL_DATE: "MMM Do, YYYY hh:mm:ss a"
  GF_EXPLORE_ENABLED: true
  GF_LOG_FILTERS: rendering:debug
  GF_PANELS_DISABLE_SANITIZE_HTML: true
grafana.ini:
  analytics:
    check_for_updates: false
  auth.basic:
    disable_login_form: false
  auth.generic_oauth:
    allow_sign_up: true
    allowed_organizations:
    api_url: "https://${SECRET_AUTH0_TENANT}.us.auth0.com/userinfo"
    auth_url: "https://${SECRET_AUTH0_TENANT}.us.auth0.com/authorize"
    client_id: "${SECRET_AUTH0_GRAFANA_CLIENT_ID}"
    client_secret: "${SECRET_AUTH0_GRAFANA_CLIENT_SECRET}"
    enabled: true
    name: Auth0
    scopes: openid profile email
    team_ids:
    token_url: "https://${SECRET_AUTH0_TENANT}.us.auth0.com/oauth/token"
  auth.generic_oauth.group_mapping:
    role_attribute_path: contains("https://${SECRET_DOMAIN}/groups"[*], 'Grafana Admins') && 'Admin' || contains("https://${SECRET_DOMAIN}/groups"[*], 'Grafana Editors') && 'Editor' || 'Viewer'
  grafana_net:
    url: https://grafana.net
  log:
    mode: console
  paths:
    data: /var/lib/grafana/data
    logs: /var/log/grafana
    plugins: /var/lib/grafana/plugins
    provisioning: /etc/grafana/provisioning
  server:
    root_url: "https://grafana.${SECRET_DOMAIN}"
ingress:
  enabled: true
  hosts:
    - &host "grafana.${SECRET_DOMAIN}"
  ingressClassName: nginx
  tls:
    - hosts:
        - *host
persistence:
  enabled: false
plugins:
  - grafana-clock-panel
  - grafana-piechart-panel
  - natel-discrete-panel
  - pr0ps-trackmap-panel
  - vonage-status-panel
  - grafana-worldmap-panel
replicas: 1
serviceAccount:
  create: true
  autoMount: true
serviceMonitor:
  enabled: true
sidecar:
  dashboards:
    enabled: true
    folderAnnotation: grafana_folder
    provider:
      foldersFromFilesStructure: true
    searchNamespace: ALL
  datasources:
    enabled: true
    searchNamespace: ALL
