---
nameOverride: &app grafana
admin:
  existingSecret: grafana-secrets
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values: [*app]
          topologyKey: kubernetes.io/hostname
        weight: 100
dashboardProviders:
  dashboardproviders.yaml:
    apiVersion: 1
    providers:
      - name: default
        disableDeletion: false
        editable: true
        folder: ""
        options:
          path: /var/lib/grafana/dashboards/default
        orgId: 1
        type: file
dashboards:
  default:
    # Ref: https://grafana.com/grafana/dashboards/13502
    minio:
      datasource: Prometheus
      gnetId: 13502
      revision: 10
    # Ref: https://grafana.com/grafana/dashboards/14364
    synology-overview:
      datasource: Prometheus
      gnetId: 14364
      revision: 8
    # Ref: https://grafana.com/grafana/dashboards/14284
    synology-detail:
      datasource: Prometheus
      gnetId: 14284
      revision: 9
datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
      - name: Prometheus
        access: proxy
        isDefault: true
        type: prometheus
        url: http://thanos-query:9090/
env:
  GF_ANALYTICS_CHECK_FOR_UPDATES: false
  GF_DATE_FORMATS_FULL_DATE: "MMM Do, YYYY hh:mm:ss a"
  GF_EXPLORE_ENABLED: true
  GF_GRAFANA_NET_URL: https://grafana.net
  GF_LOG_FILTERS: rendering:debug
  GF_LOG_MODE: console
  GF_PANELS_DISABLE_SANITIZE_HTML: true
  GF_PATHS_DATA: /var/lib/grafana/data
  GF_PATHS_LOGS: /var/log/grafana
  GF_PATHS_PLUGINS: /var/lib/grafana/plugins
  GF_PATHS_PROVISIONING: /etc/grafana/provisioning
  GF_SECURITY_ALLOW_EMBEDDING: true
  GF_SECURITY_COOKIE_SAMESITE: grafana
  GF_SERVER_ROOT_URL: "{{ .Release.Name }}.${SECRET_DOMAIN}"
grafana.ini:
  auth.basic:
    disable_login_form: false
  auth.generic_oauth:
    allow_sign_up: true
    allowed_organizations:
    api_url: "https://${SECRET_AUTH0_TENANT}.us.auth0.com/userinfo"
    auth_url: "https://${SECRET_AUTH0_TENANT}.us.auth0.com/authorize"
    client_id: "${SECRET_AUTH0_GRAFANA_CLIENT_ID}"
    client_secret: "${SECRET_AUTH0_GRAFANA_CLIENT_SECRET}"
    enabled: true
    name: Auth0
    scopes: openid profile email
    team_ids:
    token_url: "https://${SECRET_AUTH0_TENANT}.us.auth0.com/oauth/token"
  auth.generic_oauth.group_mapping:
    role_attribute_path: contains("https://${SECRET_DOMAIN}/groups"[*], 'Grafana Admins') && 'Admin' || contains("https://${SECRET_DOMAIN}/groups"[*], 'Grafana Editors') && 'Editor' || 'Viewer'
ingress:
  enabled: true
  hosts:
    - &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
  ingressClassName: nginx
  tls:
    - hosts:
        - *host
persistence:
  enabled: true
  existingClaim: *app
plugins:
  - grafana-clock-panel
  - grafana-piechart-panel
  - grafana-worldmap-panel
  - natel-discrete-panel
  - pr0ps-trackmap-panel
  - vonage-status-panel
rbac:
  pspEnabled: false
replicas: 1
serviceAccount:
  create: true
  autoMount: true
serviceMonitor:
  enabled: true
sidecar:
  dashboards:
    enabled: true
    folderAnnotation: grafana_folder
    provider:
      foldersFromFilesStructure: true
    searchNamespace: ALL
  datasources:
    enabled: true
    searchNamespace: ALL
